create table users (
  id integer generated by default as identity,
  customerId integer,
  enabled boolean not null,
  name varchar(255),
  password varchar(255),
);

create table authorities (
  id integer generated by default as identity,
  authority varchar(255),
  name varchar(255),
  primary key (id)
);

create table cart (
  cartId integer generated by default as identity,
  total double not null,
  customerId integer,
  primary key (cartId)
);

create table cartItem (
  id integer generated by default as identity,
  quantity integer not null,
  totalPrice double not null,
  cartId varchar(255),
  productId integer,
  primary key (id)
);

create table customer (
  customerId integer generated by default as identity,
  email varchar(255),
  enabled boolean not null,
  name varchar(255),
  password varchar(255),
  phone varchar(255),
  userName varchar(255),
  billingAddressId integer,
  cartId varchar(255),
  shippingAddressId integer,
  primary key (customerId)
);

create table product (
  productId integer generated by default as identity,
  productName varchar(255),
  productCategory varchar(255),
  productCondition varchar(255),
  productDescription varchar(255),
  productManufacturer varchar(255),
  productPrice double,
  productStatus varchar(255),
  unitInStock integer,
  primary key (productId)
);

create table billingAddress (
  billingAddressId integer generated by default as identity,
  apartmentNumber varchar(255),
  city varchar(255),
  country varchar(255),
  state varchar(255),
  streetName varchar(255),
  zip varchar(255),
  customerId integer,
  primary key (billingAddressId),
  constraint billing_customer foreign key (customerId) references customer(customerId)
);

create table shippingAddress (
  shippingAddressId integer generated by default as identity,
  apartmentNumber varchar(255),
  city varchar(255),
  country varchar(255),
  state varchar(255),
  streetName varchar(255),
  zip varchar(255),
  customerId integer,
  primary key (shippingAddressId),
  constraint shipping_customer foreign key (customerId) references customer(customerId)
);

create table customerOrder (
  id integer generated by default as identity,
  customerId integer,
  cartId varchar(255),
  billingAddressId integer,
  shippingAddressId integer,
  primary key (id),
  constraint customerOrder_customer foreign key (customerId) references customer(customerId),
  constraint customerOrder_cart foreign key (cartId) references cart(cartId),
  constraint customerOrder_billing foreign key (billingAddressId) references billingAddress(billingAddressId),
  constraint customerOrder_shipping foreign key (shippingAddressId) references shippingAddress(shippingAddressId)
);

alter table authorities add constraint authorities_users foreign key (name) references users(name);

alter table cart add constraint cart_customer foreign key (customerId) references customer;
alter table customer add constraint customer_cart foreign key (cartId) references cart;

alter table cartItem add constraint cartItem_cart foreign key (cartId) references cart;
alter table cartItem add constraint cartItem_product foreign key (productId) references Product;

alter table customer add constraint customer_shipping foreign key (shippingAddressId) references shippingAddress;
alter table customer add constraint customer_billing foreign key (billingAddressId) references billingAddress;

INSERT INTO users VALUES (null, null, true, 'admin', '{noop}nimda');
INSERT INTO authorities VALUES (NULL, 'ROLE_ADMIN', 'admin');

INSERT INTO users VALUES (null, null, true, 'user', '{noop}resu');
INSERT INTO authorities VALUES (NULL, 'ROLE_USER', 'user');

INSERT INTO product VALUES (
  NULL,
  'Fender Squier Bullet',
  'instrument',
  'new',
  'Budget and comfortable guitar for any Fender lover',
  'Fender',
  200.0,
  'active',
  10
);

INSERT INTO product VALUES (
  NULL,
  'Q7',
  'record',
  'new',
  'Q7 - Professional Dynamic Microphone',
  'Samson',
  50.0,
  'active',
  20
);

INSERT INTO product VALUES (
  NULL,
  'Mediator',
  'accessory',
  'new',
  'Med/heavy 1.0mm mediator made by Planet Waves',
  'Planet Waves',
  2.0,
  'active',
  30
);